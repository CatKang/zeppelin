package ZPMeta;

enum StatusCode {
  OK = 0;
  NOTFOUND = 1;
  ERROR = 2;
}

enum Type {
  PING = 1;
  PULL = 2;
  INIT = 3;
  SETMASTER = 4;
}

enum PState {
  ACTIVE = 1;
  STUCK = 2;
}

message Node {
  required string ip = 1;
  required int32 port = 2;
}

message NodeStatus {
  required Node node = 1;
  required int32 status = 2;
}
message Nodes {
  repeated NodeStatus nodes = 1;
}

message Partitions {
  required int32 id = 1;
  required PState state = 2;
  required Node master = 3;
  repeated Node slaves = 4;
}

message TableName {
  repeated string name = 1;
}

message Table {
  required string name = 1;
  repeated Partitions partitions = 2;
}

message MetaCmd {

  required Type type = 1;

  // Ping 
  message Ping {
    required int32 version = 1;
    required Node node = 2;
  }
  optional Ping ping = 2;

  // Pull
  message Pull {
    optional Node node = 1;
    optional string name = 2;
  }
  optional Pull pull = 3;

  // Init
  message Init {
    required string name = 1;
    required int32 num = 2;
  }
  optional Init init = 4;

  message SetMaster{
    required string name = 1;
    required int32 partition = 2;
    required Node node = 3;
  }
  optional SetMaster set_master = 5;
}

message MetaCmdResponse {

  required Type type = 1;
  required StatusCode code = 2;
  optional string msg = 3;

  // Ping
  message Ping {
    required int32 version = 1;  
  }
  optional Ping ping = 4;

  // Pull
  message Pull {
    required int32 version = 1;
    repeated Table info = 2;
  }
  optional Pull pull = 5;
}
